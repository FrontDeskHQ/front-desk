/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppThreadsIndexRouteImport } from './routes/app/threads/index'
import { Route as AppThreadsIdRouteImport } from './routes/app/threads/$id'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppThreadsIndexRoute = AppThreadsIndexRouteImport.update({
  id: '/threads/',
  path: '/threads/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppThreadsIdRoute = AppThreadsIdRouteImport.update({
  id: '/threads/$id',
  path: '/threads/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app/': typeof AppIndexRoute
  '/app/threads/$id': typeof AppThreadsIdRoute
  '/app/threads': typeof AppThreadsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app': typeof AppIndexRoute
  '/app/threads/$id': typeof AppThreadsIdRoute
  '/app/threads': typeof AppThreadsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app/': typeof AppIndexRoute
  '/app/threads/$id': typeof AppThreadsIdRoute
  '/app/threads/': typeof AppThreadsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/onboarding'
    | '/sign-up'
    | '/app/'
    | '/app/threads/$id'
    | '/app/threads'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/sign-up'
    | '/app'
    | '/app/threads/$id'
    | '/app/threads'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/onboarding'
    | '/sign-up'
    | '/app/'
    | '/app/threads/$id'
    | '/app/threads/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/threads/': {
      id: '/app/threads/'
      path: '/threads'
      fullPath: '/app/threads'
      preLoaderRoute: typeof AppThreadsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/threads/$id': {
      id: '/app/threads/$id'
      path: '/threads/$id'
      fullPath: '/app/threads/$id'
      preLoaderRoute: typeof AppThreadsIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppThreadsIdRoute: typeof AppThreadsIdRoute
  AppThreadsIndexRoute: typeof AppThreadsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppThreadsIdRoute: AppThreadsIdRoute,
  AppThreadsIndexRoute: AppThreadsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
