/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppMainRouteRouteImport } from './routes/app/_main/route'
import { Route as AppMainIndexRouteImport } from './routes/app/_main/index'
import { Route as AppSettingsOrganizationIndexRouteImport } from './routes/app/settings/organization/index'
import { Route as AppMainThreadsIndexRouteImport } from './routes/app/_main/threads/index'
import { Route as AppMainThreadsIdRouteImport } from './routes/app/_main/threads/$id'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppMainRouteRoute = AppMainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMainIndexRoute = AppMainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppMainRouteRoute,
} as any)
const AppSettingsOrganizationIndexRoute =
  AppSettingsOrganizationIndexRouteImport.update({
    id: '/settings/organization/',
    path: '/settings/organization/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppMainThreadsIndexRoute = AppMainThreadsIndexRouteImport.update({
  id: '/threads/',
  path: '/threads/',
  getParentRoute: () => AppMainRouteRoute,
} as any)
const AppMainThreadsIdRoute = AppMainThreadsIdRouteImport.update({
  id: '/threads/$id',
  path: '/threads/$id',
  getParentRoute: () => AppMainRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppMainRouteRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app/': typeof AppMainIndexRoute
  '/app/threads/$id': typeof AppMainThreadsIdRoute
  '/app/threads': typeof AppMainThreadsIndexRoute
  '/app/settings/organization': typeof AppSettingsOrganizationIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppMainIndexRoute
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app/threads/$id': typeof AppMainThreadsIdRoute
  '/app/threads': typeof AppMainThreadsIndexRoute
  '/app/settings/organization': typeof AppSettingsOrganizationIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/onboarding': typeof OnboardingRoute
  '/sign-up': typeof SignUpRoute
  '/app/_main': typeof AppMainRouteRouteWithChildren
  '/app/_main/': typeof AppMainIndexRoute
  '/app/_main/threads/$id': typeof AppMainThreadsIdRoute
  '/app/_main/threads/': typeof AppMainThreadsIndexRoute
  '/app/settings/organization/': typeof AppSettingsOrganizationIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/onboarding'
    | '/sign-up'
    | '/app/'
    | '/app/threads/$id'
    | '/app/threads'
    | '/app/settings/organization'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/onboarding'
    | '/sign-up'
    | '/app/threads/$id'
    | '/app/threads'
    | '/app/settings/organization'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/onboarding'
    | '/sign-up'
    | '/app/_main'
    | '/app/_main/'
    | '/app/_main/threads/$id'
    | '/app/_main/threads/'
    | '/app/settings/organization/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  OnboardingRoute: typeof OnboardingRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/_main': {
      id: '/app/_main'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AppMainRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/_main/': {
      id: '/app/_main/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppMainIndexRouteImport
      parentRoute: typeof AppMainRouteRoute
    }
    '/app/settings/organization/': {
      id: '/app/settings/organization/'
      path: '/settings/organization'
      fullPath: '/app/settings/organization'
      preLoaderRoute: typeof AppSettingsOrganizationIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/_main/threads/': {
      id: '/app/_main/threads/'
      path: '/threads'
      fullPath: '/app/threads'
      preLoaderRoute: typeof AppMainThreadsIndexRouteImport
      parentRoute: typeof AppMainRouteRoute
    }
    '/app/_main/threads/$id': {
      id: '/app/_main/threads/$id'
      path: '/threads/$id'
      fullPath: '/app/threads/$id'
      preLoaderRoute: typeof AppMainThreadsIdRouteImport
      parentRoute: typeof AppMainRouteRoute
    }
  }
}

interface AppMainRouteRouteChildren {
  AppMainIndexRoute: typeof AppMainIndexRoute
  AppMainThreadsIdRoute: typeof AppMainThreadsIdRoute
  AppMainThreadsIndexRoute: typeof AppMainThreadsIndexRoute
}

const AppMainRouteRouteChildren: AppMainRouteRouteChildren = {
  AppMainIndexRoute: AppMainIndexRoute,
  AppMainThreadsIdRoute: AppMainThreadsIdRoute,
  AppMainThreadsIndexRoute: AppMainThreadsIndexRoute,
}

const AppMainRouteRouteWithChildren = AppMainRouteRoute._addFileChildren(
  AppMainRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppMainRouteRoute: typeof AppMainRouteRouteWithChildren
  AppSettingsOrganizationIndexRoute: typeof AppSettingsOrganizationIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMainRouteRoute: AppMainRouteRouteWithChildren,
  AppSettingsOrganizationIndexRoute: AppSettingsOrganizationIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  OnboardingRoute: OnboardingRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
