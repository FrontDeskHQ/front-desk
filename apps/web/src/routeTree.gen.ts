/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppWorkspaceRouteRouteImport } from './routes/app/_workspace/route'
import { Route as AppOnboardingIndexRouteImport } from './routes/app/onboarding/index'
import { Route as AppOnboardingNewRouteImport } from './routes/app/onboarding/new'
import { Route as AppInvitationIdRouteImport } from './routes/app/invitation.$id'
import { Route as AppWorkspaceSettingsRouteRouteImport } from './routes/app/_workspace/settings/route'
import { Route as AppWorkspaceMainRouteRouteImport } from './routes/app/_workspace/_main/route'
import { Route as SupportChar123SlugChar125ThreadsIndexRouteImport } from './routes/support/{-$slug}/threads/index'
import { Route as AppWorkspaceSettingsIndexRouteImport } from './routes/app/_workspace/settings/index'
import { Route as AppWorkspaceMainIndexRouteImport } from './routes/app/_workspace/_main/index'
import { Route as SupportChar123SlugChar125ThreadsIdRouteImport } from './routes/support/{-$slug}/threads/$id'
import { Route as AppWorkspaceSettingsUserIndexRouteImport } from './routes/app/_workspace/settings/user/index'
import { Route as AppWorkspaceSettingsOrganizationIndexRouteImport } from './routes/app/_workspace/settings/organization/index'
import { Route as AppWorkspaceMainThreadsIndexRouteImport } from './routes/app/_workspace/_main/threads/index'
import { Route as AppWorkspaceSettingsOrganizationTeamRouteImport } from './routes/app/_workspace/settings/organization/team'
import { Route as AppWorkspaceMainThreadsIdRouteImport } from './routes/app/_workspace/_main/threads/$id'
import { Route as AppWorkspaceSettingsOrganizationIntegrationIndexRouteImport } from './routes/app/_workspace/settings/organization/integration/index'
import { Route as AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRouteImport } from './routes/app/_workspace/settings/organization/integration/discord/index'
import { Route as AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRouteImport } from './routes/app/_workspace/settings/organization/integration/discord/redirect'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppWorkspaceRouteRoute = AppWorkspaceRouteRouteImport.update({
  id: '/_workspace',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppOnboardingIndexRoute = AppOnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppOnboardingNewRoute = AppOnboardingNewRouteImport.update({
  id: '/onboarding/new',
  path: '/onboarding/new',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInvitationIdRoute = AppInvitationIdRouteImport.update({
  id: '/invitation/$id',
  path: '/invitation/$id',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppWorkspaceSettingsRouteRoute =
  AppWorkspaceSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppWorkspaceRouteRoute,
  } as any)
const AppWorkspaceMainRouteRoute = AppWorkspaceMainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => AppWorkspaceRouteRoute,
} as any)
const SupportChar123SlugChar125ThreadsIndexRoute =
  SupportChar123SlugChar125ThreadsIndexRouteImport.update({
    id: '/support/{-$slug}/threads/',
    path: '/support/{-$slug}/threads/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppWorkspaceSettingsIndexRoute =
  AppWorkspaceSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceMainIndexRoute = AppWorkspaceMainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppWorkspaceMainRouteRoute,
} as any)
const SupportChar123SlugChar125ThreadsIdRoute =
  SupportChar123SlugChar125ThreadsIdRouteImport.update({
    id: '/support/{-$slug}/threads/$id',
    path: '/support/{-$slug}/threads/$id',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppWorkspaceSettingsUserIndexRoute =
  AppWorkspaceSettingsUserIndexRouteImport.update({
    id: '/user/',
    path: '/user/',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceSettingsOrganizationIndexRoute =
  AppWorkspaceSettingsOrganizationIndexRouteImport.update({
    id: '/organization/',
    path: '/organization/',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceMainThreadsIndexRoute =
  AppWorkspaceMainThreadsIndexRouteImport.update({
    id: '/threads/',
    path: '/threads/',
    getParentRoute: () => AppWorkspaceMainRouteRoute,
  } as any)
const AppWorkspaceSettingsOrganizationTeamRoute =
  AppWorkspaceSettingsOrganizationTeamRouteImport.update({
    id: '/organization/team',
    path: '/organization/team',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceMainThreadsIdRoute =
  AppWorkspaceMainThreadsIdRouteImport.update({
    id: '/threads/$id',
    path: '/threads/$id',
    getParentRoute: () => AppWorkspaceMainRouteRoute,
  } as any)
const AppWorkspaceSettingsOrganizationIntegrationIndexRoute =
  AppWorkspaceSettingsOrganizationIntegrationIndexRouteImport.update({
    id: '/organization/integration/',
    path: '/organization/integration/',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute =
  AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRouteImport.update({
    id: '/organization/integration/discord/',
    path: '/organization/integration/discord/',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)
const AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute =
  AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRouteImport.update({
    id: '/organization/integration/discord/redirect',
    path: '/organization/integration/discord/redirect',
    getParentRoute: () => AppWorkspaceSettingsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppWorkspaceMainRouteRouteWithChildren
  '/sign-up': typeof SignUpRoute
  '/app/settings': typeof AppWorkspaceSettingsRouteRouteWithChildren
  '/app/invitation/$id': typeof AppInvitationIdRoute
  '/app/onboarding/new': typeof AppOnboardingNewRoute
  '/app/onboarding': typeof AppOnboardingIndexRoute
  '/support/{-$slug}/threads/$id': typeof SupportChar123SlugChar125ThreadsIdRoute
  '/app/': typeof AppWorkspaceMainIndexRoute
  '/app/settings/': typeof AppWorkspaceSettingsIndexRoute
  '/support/{-$slug}/threads': typeof SupportChar123SlugChar125ThreadsIndexRoute
  '/app/threads/$id': typeof AppWorkspaceMainThreadsIdRoute
  '/app/settings/organization/team': typeof AppWorkspaceSettingsOrganizationTeamRoute
  '/app/threads': typeof AppWorkspaceMainThreadsIndexRoute
  '/app/settings/organization': typeof AppWorkspaceSettingsOrganizationIndexRoute
  '/app/settings/user': typeof AppWorkspaceSettingsUserIndexRoute
  '/app/settings/organization/integration': typeof AppWorkspaceSettingsOrganizationIntegrationIndexRoute
  '/app/settings/organization/integration/discord/redirect': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute
  '/app/settings/organization/integration/discord': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppWorkspaceMainIndexRoute
  '/sign-up': typeof SignUpRoute
  '/app/invitation/$id': typeof AppInvitationIdRoute
  '/app/onboarding/new': typeof AppOnboardingNewRoute
  '/app/onboarding': typeof AppOnboardingIndexRoute
  '/support/{-$slug}/threads/$id': typeof SupportChar123SlugChar125ThreadsIdRoute
  '/app/settings': typeof AppWorkspaceSettingsIndexRoute
  '/support/{-$slug}/threads': typeof SupportChar123SlugChar125ThreadsIndexRoute
  '/app/threads/$id': typeof AppWorkspaceMainThreadsIdRoute
  '/app/settings/organization/team': typeof AppWorkspaceSettingsOrganizationTeamRoute
  '/app/threads': typeof AppWorkspaceMainThreadsIndexRoute
  '/app/settings/organization': typeof AppWorkspaceSettingsOrganizationIndexRoute
  '/app/settings/user': typeof AppWorkspaceSettingsUserIndexRoute
  '/app/settings/organization/integration': typeof AppWorkspaceSettingsOrganizationIntegrationIndexRoute
  '/app/settings/organization/integration/discord/redirect': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute
  '/app/settings/organization/integration/discord': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/sign-up': typeof SignUpRoute
  '/app/_workspace': typeof AppWorkspaceRouteRouteWithChildren
  '/app/_workspace/_main': typeof AppWorkspaceMainRouteRouteWithChildren
  '/app/_workspace/settings': typeof AppWorkspaceSettingsRouteRouteWithChildren
  '/app/invitation/$id': typeof AppInvitationIdRoute
  '/app/onboarding/new': typeof AppOnboardingNewRoute
  '/app/onboarding/': typeof AppOnboardingIndexRoute
  '/support/{-$slug}/threads/$id': typeof SupportChar123SlugChar125ThreadsIdRoute
  '/app/_workspace/_main/': typeof AppWorkspaceMainIndexRoute
  '/app/_workspace/settings/': typeof AppWorkspaceSettingsIndexRoute
  '/support/{-$slug}/threads/': typeof SupportChar123SlugChar125ThreadsIndexRoute
  '/app/_workspace/_main/threads/$id': typeof AppWorkspaceMainThreadsIdRoute
  '/app/_workspace/settings/organization/team': typeof AppWorkspaceSettingsOrganizationTeamRoute
  '/app/_workspace/_main/threads/': typeof AppWorkspaceMainThreadsIndexRoute
  '/app/_workspace/settings/organization/': typeof AppWorkspaceSettingsOrganizationIndexRoute
  '/app/_workspace/settings/user/': typeof AppWorkspaceSettingsUserIndexRoute
  '/app/_workspace/settings/organization/integration/': typeof AppWorkspaceSettingsOrganizationIntegrationIndexRoute
  '/app/_workspace/settings/organization/integration/discord/redirect': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute
  '/app/_workspace/settings/organization/integration/discord/': typeof AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/sign-up'
    | '/app/settings'
    | '/app/invitation/$id'
    | '/app/onboarding/new'
    | '/app/onboarding'
    | '/support/{-$slug}/threads/$id'
    | '/app/'
    | '/app/settings/'
    | '/support/{-$slug}/threads'
    | '/app/threads/$id'
    | '/app/settings/organization/team'
    | '/app/threads'
    | '/app/settings/organization'
    | '/app/settings/user'
    | '/app/settings/organization/integration'
    | '/app/settings/organization/integration/discord/redirect'
    | '/app/settings/organization/integration/discord'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/sign-up'
    | '/app/invitation/$id'
    | '/app/onboarding/new'
    | '/app/onboarding'
    | '/support/{-$slug}/threads/$id'
    | '/app/settings'
    | '/support/{-$slug}/threads'
    | '/app/threads/$id'
    | '/app/settings/organization/team'
    | '/app/threads'
    | '/app/settings/organization'
    | '/app/settings/user'
    | '/app/settings/organization/integration'
    | '/app/settings/organization/integration/discord/redirect'
    | '/app/settings/organization/integration/discord'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/sign-up'
    | '/app/_workspace'
    | '/app/_workspace/_main'
    | '/app/_workspace/settings'
    | '/app/invitation/$id'
    | '/app/onboarding/new'
    | '/app/onboarding/'
    | '/support/{-$slug}/threads/$id'
    | '/app/_workspace/_main/'
    | '/app/_workspace/settings/'
    | '/support/{-$slug}/threads/'
    | '/app/_workspace/_main/threads/$id'
    | '/app/_workspace/settings/organization/team'
    | '/app/_workspace/_main/threads/'
    | '/app/_workspace/settings/organization/'
    | '/app/_workspace/settings/user/'
    | '/app/_workspace/settings/organization/integration/'
    | '/app/_workspace/settings/organization/integration/discord/redirect'
    | '/app/_workspace/settings/organization/integration/discord/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  SignUpRoute: typeof SignUpRoute
  SupportChar123SlugChar125ThreadsIdRoute: typeof SupportChar123SlugChar125ThreadsIdRoute
  SupportChar123SlugChar125ThreadsIndexRoute: typeof SupportChar123SlugChar125ThreadsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/_workspace': {
      id: '/app/_workspace'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AppWorkspaceRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/onboarding/': {
      id: '/app/onboarding/'
      path: '/onboarding'
      fullPath: '/app/onboarding'
      preLoaderRoute: typeof AppOnboardingIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/onboarding/new': {
      id: '/app/onboarding/new'
      path: '/onboarding/new'
      fullPath: '/app/onboarding/new'
      preLoaderRoute: typeof AppOnboardingNewRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/invitation/$id': {
      id: '/app/invitation/$id'
      path: '/invitation/$id'
      fullPath: '/app/invitation/$id'
      preLoaderRoute: typeof AppInvitationIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/_workspace/settings': {
      id: '/app/_workspace/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppWorkspaceSettingsRouteRouteImport
      parentRoute: typeof AppWorkspaceRouteRoute
    }
    '/app/_workspace/_main': {
      id: '/app/_workspace/_main'
      path: ''
      fullPath: '/app'
      preLoaderRoute: typeof AppWorkspaceMainRouteRouteImport
      parentRoute: typeof AppWorkspaceRouteRoute
    }
    '/support/{-$slug}/threads/': {
      id: '/support/{-$slug}/threads/'
      path: '/support/{-$slug}/threads'
      fullPath: '/support/{-$slug}/threads'
      preLoaderRoute: typeof SupportChar123SlugChar125ThreadsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/_workspace/settings/': {
      id: '/app/_workspace/settings/'
      path: '/'
      fullPath: '/app/settings/'
      preLoaderRoute: typeof AppWorkspaceSettingsIndexRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/_main/': {
      id: '/app/_workspace/_main/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppWorkspaceMainIndexRouteImport
      parentRoute: typeof AppWorkspaceMainRouteRoute
    }
    '/support/{-$slug}/threads/$id': {
      id: '/support/{-$slug}/threads/$id'
      path: '/support/{-$slug}/threads/$id'
      fullPath: '/support/{-$slug}/threads/$id'
      preLoaderRoute: typeof SupportChar123SlugChar125ThreadsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/_workspace/settings/user/': {
      id: '/app/_workspace/settings/user/'
      path: '/user'
      fullPath: '/app/settings/user'
      preLoaderRoute: typeof AppWorkspaceSettingsUserIndexRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/settings/organization/': {
      id: '/app/_workspace/settings/organization/'
      path: '/organization'
      fullPath: '/app/settings/organization'
      preLoaderRoute: typeof AppWorkspaceSettingsOrganizationIndexRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/_main/threads/': {
      id: '/app/_workspace/_main/threads/'
      path: '/threads'
      fullPath: '/app/threads'
      preLoaderRoute: typeof AppWorkspaceMainThreadsIndexRouteImport
      parentRoute: typeof AppWorkspaceMainRouteRoute
    }
    '/app/_workspace/settings/organization/team': {
      id: '/app/_workspace/settings/organization/team'
      path: '/organization/team'
      fullPath: '/app/settings/organization/team'
      preLoaderRoute: typeof AppWorkspaceSettingsOrganizationTeamRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/_main/threads/$id': {
      id: '/app/_workspace/_main/threads/$id'
      path: '/threads/$id'
      fullPath: '/app/threads/$id'
      preLoaderRoute: typeof AppWorkspaceMainThreadsIdRouteImport
      parentRoute: typeof AppWorkspaceMainRouteRoute
    }
    '/app/_workspace/settings/organization/integration/': {
      id: '/app/_workspace/settings/organization/integration/'
      path: '/organization/integration'
      fullPath: '/app/settings/organization/integration'
      preLoaderRoute: typeof AppWorkspaceSettingsOrganizationIntegrationIndexRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/settings/organization/integration/discord/': {
      id: '/app/_workspace/settings/organization/integration/discord/'
      path: '/organization/integration/discord'
      fullPath: '/app/settings/organization/integration/discord'
      preLoaderRoute: typeof AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
    '/app/_workspace/settings/organization/integration/discord/redirect': {
      id: '/app/_workspace/settings/organization/integration/discord/redirect'
      path: '/organization/integration/discord/redirect'
      fullPath: '/app/settings/organization/integration/discord/redirect'
      preLoaderRoute: typeof AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRouteImport
      parentRoute: typeof AppWorkspaceSettingsRouteRoute
    }
  }
}

interface AppWorkspaceMainRouteRouteChildren {
  AppWorkspaceMainIndexRoute: typeof AppWorkspaceMainIndexRoute
  AppWorkspaceMainThreadsIdRoute: typeof AppWorkspaceMainThreadsIdRoute
  AppWorkspaceMainThreadsIndexRoute: typeof AppWorkspaceMainThreadsIndexRoute
}

const AppWorkspaceMainRouteRouteChildren: AppWorkspaceMainRouteRouteChildren = {
  AppWorkspaceMainIndexRoute: AppWorkspaceMainIndexRoute,
  AppWorkspaceMainThreadsIdRoute: AppWorkspaceMainThreadsIdRoute,
  AppWorkspaceMainThreadsIndexRoute: AppWorkspaceMainThreadsIndexRoute,
}

const AppWorkspaceMainRouteRouteWithChildren =
  AppWorkspaceMainRouteRoute._addFileChildren(
    AppWorkspaceMainRouteRouteChildren,
  )

interface AppWorkspaceSettingsRouteRouteChildren {
  AppWorkspaceSettingsIndexRoute: typeof AppWorkspaceSettingsIndexRoute
  AppWorkspaceSettingsOrganizationTeamRoute: typeof AppWorkspaceSettingsOrganizationTeamRoute
  AppWorkspaceSettingsOrganizationIndexRoute: typeof AppWorkspaceSettingsOrganizationIndexRoute
  AppWorkspaceSettingsUserIndexRoute: typeof AppWorkspaceSettingsUserIndexRoute
  AppWorkspaceSettingsOrganizationIntegrationIndexRoute: typeof AppWorkspaceSettingsOrganizationIntegrationIndexRoute
  AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute: typeof AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute
  AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute: typeof AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute
}

const AppWorkspaceSettingsRouteRouteChildren: AppWorkspaceSettingsRouteRouteChildren =
  {
    AppWorkspaceSettingsIndexRoute: AppWorkspaceSettingsIndexRoute,
    AppWorkspaceSettingsOrganizationTeamRoute:
      AppWorkspaceSettingsOrganizationTeamRoute,
    AppWorkspaceSettingsOrganizationIndexRoute:
      AppWorkspaceSettingsOrganizationIndexRoute,
    AppWorkspaceSettingsUserIndexRoute: AppWorkspaceSettingsUserIndexRoute,
    AppWorkspaceSettingsOrganizationIntegrationIndexRoute:
      AppWorkspaceSettingsOrganizationIntegrationIndexRoute,
    AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute:
      AppWorkspaceSettingsOrganizationIntegrationDiscordRedirectRoute,
    AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute:
      AppWorkspaceSettingsOrganizationIntegrationDiscordIndexRoute,
  }

const AppWorkspaceSettingsRouteRouteWithChildren =
  AppWorkspaceSettingsRouteRoute._addFileChildren(
    AppWorkspaceSettingsRouteRouteChildren,
  )

interface AppWorkspaceRouteRouteChildren {
  AppWorkspaceMainRouteRoute: typeof AppWorkspaceMainRouteRouteWithChildren
  AppWorkspaceSettingsRouteRoute: typeof AppWorkspaceSettingsRouteRouteWithChildren
}

const AppWorkspaceRouteRouteChildren: AppWorkspaceRouteRouteChildren = {
  AppWorkspaceMainRouteRoute: AppWorkspaceMainRouteRouteWithChildren,
  AppWorkspaceSettingsRouteRoute: AppWorkspaceSettingsRouteRouteWithChildren,
}

const AppWorkspaceRouteRouteWithChildren =
  AppWorkspaceRouteRoute._addFileChildren(AppWorkspaceRouteRouteChildren)

interface AppRouteRouteChildren {
  AppWorkspaceRouteRoute: typeof AppWorkspaceRouteRouteWithChildren
  AppInvitationIdRoute: typeof AppInvitationIdRoute
  AppOnboardingNewRoute: typeof AppOnboardingNewRoute
  AppOnboardingIndexRoute: typeof AppOnboardingIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppWorkspaceRouteRoute: AppWorkspaceRouteRouteWithChildren,
  AppInvitationIdRoute: AppInvitationIdRoute,
  AppOnboardingNewRoute: AppOnboardingNewRoute,
  AppOnboardingIndexRoute: AppOnboardingIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  SignUpRoute: SignUpRoute,
  SupportChar123SlugChar125ThreadsIdRoute:
    SupportChar123SlugChar125ThreadsIdRoute,
  SupportChar123SlugChar125ThreadsIndexRoute:
    SupportChar123SlugChar125ThreadsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
